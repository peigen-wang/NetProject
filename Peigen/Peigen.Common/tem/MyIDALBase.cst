<%@ CodeTemplate Language="C#" TargetLanguage="C#" ResponseEncoding="UTF-8" Description="Great DALFactory Class - DALFactory" %>
<%@ Property Name="NameSpace" Type="System.String" Default="" Category="Text" Description="Namespace" %>
//====================================================================
// Sainty Fan @Copy Right 2010-2011
// 源文件名: IDALBase.cs
// 创建时间: <%=DateTime.Now.ToShortDateString() %>
//====================================================================
using System;
using System.Data;
using System.Collections.Generic;
using System.Data.Common;


namespace <%= NameSpace %>.IDAL
{
	/// <summary>
	/// 通用数据访问层接口
	/// </summary>
	/// <typeparam name="T">实体泛型</typeparam>
	public interface IDAL<T>
	{
		/// <summary>
		/// 增加一条数据
		/// </summary>
		int Add(T model);

		/// <summary>
		/// 更新一条数据
		/// </summary>
		bool Update(T model);

		/// <summary>
		/// 删除一条数据
		/// </summary>
		bool Delete(int fieldID);

		/// <summary>
		/// 得到最大ID
		///</summary>
		int GetMaxId();

		/// <summary>
		/// 是否存在该记录
		/// </summary>
		bool Exists(int fieldID);

		/// <summary>
		/// 得到一个对象实体
		/// </summary>
		T GetModel(int fieldID);

		/// <summary>
		/// 获取数据集,建议只在多表联查时使用
		/// </summary>
        DataTable GetDataTable(string strSql);

		/// <summary>
		/// 获取数据集,单表查询时使用
		/// </summary>
        DataTable GetDataTable(string strWhat, string strWhere, string strOrderby);

		/// <summary>
		/// 获取泛型数据列表,建议只在多表联查时使用
		/// </summary>
		IList<T> GetList(string strSql);

		/// <summary>
		/// 获取泛型数据列表,单表查询时使用
		/// </summary>
		IList<T> GetList(string strWhat, string strWhere, string strOrderby);
        
        /// <summary>
        /// 得到数据条数
        /// </summary>
        int GetCount(string condition);

		/// <summary>
		/// 根据分页获得数据列表
		/// </summary>
        IList<T> GetList(string fldSort, string condition, int first, int last);
	}
}